Take a look at the following code:

name = 'Bob'
save_name = name
name = 'Alice'
puts name, save_name
What does this code print out? Think about it for a moment before continuing.

If you said that code printed

Alice
Bob
you are 100% correct, and the answer should come as no surprise. Now, let's look at something a bit different:

name = 'Bob'
save_name = name
name.upcase!
puts name, save_name
What does this print out? Can you explain these results?



ANSWER:
1)
  => Alice
  => Bob

  Inicially, name and save_name are pointing to the same value (they have the same object_id). But when we assign a new value to name, the name variable now points to another value and have anoter object_id. For that reason, when we call #puts to name and save_name, they will reference to different objects.
  --------------
2)
  => BOB
  => BOB

  Both will print BOB because both variables (name and save_name) are pointing to the same value, and when we pass the upcase! method to name, we mutate its value. Consequently name and save_name will have the same value changed to 'BOB'.